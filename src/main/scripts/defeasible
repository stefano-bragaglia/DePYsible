#!/usr/bin/env python
import logging
from argparse import ArgumentParser
from argparse import Namespace
from cmd import Cmd

import colorama
import coloredlogs
import verboselogs
from colorama import Fore
from colorama import Style

from defeasible import main

colorama.init()
verboselogs.install()
coloredlogs.install()

_logger = logging.getLogger('defeasible')

NAME = 'Defeasible'
VERSION = '0.1.0'


def program(blind: bool = False) -> str:
    if blind:
        return NAME

    return '%s%s%s' % (Fore.BLUE, NAME, Fore.RESET)


def version(blind: bool = False) -> str:
    if blind:
        return VERSION

    return '%s%s%s' % (Fore.BLUE, VERSION, Fore.RESET)


def platform(blind: bool = False) -> str:
    import platform

    if blind:
        return '(%s)' % platform.platform()

    return '%s(%s)%s' % (Style.DIM, platform.platform(), Style.RESET_ALL)


def command(name: str, blind: bool = False) -> str:
    if blind:
        return '"%s"' % name

    return '%s"%s"%s' % (Fore.YELLOW, name, Fore.RESET)


def prompt(blind: bool = False) -> str:
    if blind:
        return '\n?- '

    else:
        return '\n%s?-%s ' % (Style.DIM, Style.RESET_ALL)


def intro(blind: bool = False) -> str:
    return """Welcome to %s %s %s
%s comes with ABSOLUTELY NO WARRANTY. This is free software.
Type %s, %s, %s and %s for more information.""" % (
        program(blind), version(blind), platform(blind), program(blind),
        command('help', blind), command('copyright', blind), command('credits', blind), command('license', blind)
    )


class DefeasibleShell(Cmd):

    def __init__(self, namespace: Namespace):
        super().__init__()
        self.blind = namespace.blind
        self.intro = intro(self.blind)
        self.prompt = prompt(blind=self.blind)
        self.ruler = ''

    def do_halt(self, arg):
        """Stop this session and close the interpreter"""
        # print('Thank you for using Turtle')
        # self.close()
        # bye()
        return True


if __name__ == '__main__':
    parser = ArgumentParser(prog='defeasible', add_help=True, allow_abbrev=True)
    parser.add_argument('-b', '--blind', help='ignore colours to render output', action='store_true', default=False)
    parser.add_argument('filename', help='load the file with given name', nargs='?')
    namespace = parser.parse_args()

    cli = DefeasibleShell(namespace)
    cli.cmdloop()

    main(blind=namespace.blind)

    _logger.verbose('Done.')
